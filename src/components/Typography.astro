---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  variant: keyof typeof variantClasses;
  color: keyof typeof colorClasses;
}>;

const { as: Tag, class: className, variant, color, ...props } = Astro.props;

const variantClasses: { [key: string]: string } = {
  h1: "text-4xl uppercase",
  h2: "text-lg font-medium uppercase lg:text-2xl",
  h3: "text-2xl font-semibold uppercase",
  body: "text-xl",
  medium: "text-md",
  big: "text-6xl uppercase",
  bigger:
    "text-[65px] xs:text-[85px] sm:text-[120px] lg:text-[180px] sm:pb-4 lg:pb-8 tracking-wide font-semibold",
};

const colorClasses = {
  white: "text-white",
  black: "text-black",
  primary: "text-accent",
  neutral: "text-neutral",
};

const classes = [
  variantClasses[variant as keyof typeof variantClasses],
  colorClasses[color as keyof typeof colorClasses],
  className,
];
---

<Tag class:list={classes} {...props}>
  <slot />
</Tag>
